version: '2'
services:
  redis:
    container_name: redis
    image: redis:latest
    restart: always
    networks:
      - net-redis
    ports:
      - 6379:6379
    volumes:
      - /home/redis:/etc/redis
      - /data/redis:/data
    command: redis-server --port 6379 --requirepass Ysj!@#qwe333&*66  --appendonly yes --protected-mode no --bind 0.0.0.0

  register-center:
    build:
      context: ./register-center
    container_name: register-center
    image: register-center
    restart: always
    networks:
      - net-register-center
    ports:
      - 8088:8088
    volumes:
      - /data/logs:/data/logs
    cap_add:
      - ALL

  producer:
    build:
      context: ./producer
    container_name: producer
    image: producer
    restart: always
    networks:
      - net-producer
      - net-register-center
    ports:
      - 8081:8081
    volumes:
      - /data/logs:/data/logs
    depends_on:
      - register-center
    cap_add:
      - ALL

  consumer:
    build:
      context: ./consumer
    container_name: consumer
    image: consumer
    restart: always
    networks:
      - net-redis
      - net-register-center
      - net-producer
    ports:
      - 8082:8082
    volumes:
      - /data/logs:/data/logs
    depends_on:
      - register-center
      - producer
      - redis
    cap_add:
      - ALL
    # 环境变量, application.yml可以使用${environment_variable}方式获取参数
    # 感觉相对于networks方式配置网络, 使用environment方式更加简单
    environment:
      - MYSQL_HOST=172.25.56.125
      - REDIS_PASSWORD=Ysj!@#qwe333&*66
      - JAVA_OPTS=-server -Xms256m -Xmx256m -Xss512k -XX:+UseConcMarkSweepGC -XX:+UseParNewGC
        -XX:+CMSParallelRemarkEnabled -XX:+UseCompressedOops -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/home/work/gc/heapdump.hprof
    # 配置文件方式配置环境变量, 更加方便管理
    env_file:
      - .env

networks:
  net-redis:
    driver: bridge
  net-register-center:
    driver: bridge
  net-producer:
    driver: bridge